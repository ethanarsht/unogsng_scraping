library(shiny)
library(tidyverse)
library(sf)
library(shiny)
library(tidyverse)
library(sf)
titles <- read_csv('all_details_26-5.csv', guess_max = 10000)
titles <- read_csv('all_details_26-5.csv', guess_max = 10000)
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+'))
world <- ne_countries(scale = "medium", returnclass = "sf") %>% select(admin)
View(df_titles)
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"')
) %>%
group_by(coo = country, netflix = country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+'))
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+')) %>%
rename(country = coo, netflix = country_name)
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+')) %>%
rename(coo = country, netflix = country_name)
world <- ne_countries(scale = "medium", returnclass = "sf") %>% select(admin)
runApp()
runApp()
library(shiny)
library(tidyverse)
library(sf)
titles <- read_csv('all_details_26-5.csv', guess_max = 10000)
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+')) %>%
rename(coo = country, netflix = country_name)
ui <- shinyUI(
fluidPage(
titlePanel('Netflix Catalog Explorer', 'Netflix Catalog'),
sidebarPanel(
selectInput('coo',
'Country of production',
choices = c('', unique(df_titles$coo))
),
selectInput('cat',
'Catalog Country',
'Catalog',
choices = c('', unique(df_titles$netflix)))
)
)
)
runApp(ui = ui, server = server)
runApp()
runApp()
df_combined <- df_titles %>% left_join(world, by = c('country_name' = 'admin')) %>%
mutate(
n_count = count / max(count)
)
<-
<-
world <- ne_countries(scale = "medium", returnclass = "sf") %>% select(admin)
df_c <- st_centroid(world) %>% st_coordinates %>% as.data.frame()
world <- bind_cols(world, df_c) %>%
as.data.frame() %>%
select(-geometry) %>%
mutate(
admin = str_replace(admin, 'United States of America', 'United States'),
admin = str_replace(admin, 'UK', 'United Kingdom')
)
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+'))
world <- ne_countries(scale = "medium", returnclass = "sf") %>% select(admin)
library(rnaturalearth)
titles <- read_csv('all_details_26-5.csv', guess_max = 10000)
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+'))
world <- ne_countries(scale = "medium", returnclass = "sf") %>% select(admin)
df_c <- st_centroid(world) %>% st_coordinates %>% as.data.frame()
world <- bind_cols(world, df_c) %>%
as.data.frame() %>%
select(-geometry) %>%
mutate(
admin = str_replace(admin, 'United States of America', 'United States'),
admin = str_replace(admin, 'UK', 'United Kingdom')
)
df_combined <- df_titles %>% left_join(world, by = c('country_name' = 'admin')) %>%
mutate(
n_count = count / max(count)
)
View(df_combined)
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"'),
country = str_replace('USA', 'United States'),
country = str_replace('UK', 'United Kingdom')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+'))
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"'),
country = str_replace(country, 'USA', 'United States'),
country = str_replace(country, 'UK', 'United Kingdom')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+'))
world <- ne_countries(scale = "medium", returnclass = "sf") %>% select(admin)
df_c <- st_centroid(world) %>% st_coordinates %>% as.data.frame()
world <- bind_cols(world, df_c) %>%
as.data.frame() %>%
select(-geometry) %>%
mutate(
admin = str_replace(admin, 'United States of America', 'United States'),
admin = str_replace(admin, 'UK', 'United Kingdom')
)
df_combined <- df_titles %>% left_join(world, by = c('country_name' = 'admin')) %>%
mutate(
n_count = count / max(count)
)
df_combined <- df_titles %>% left_join(world, by = c('country_name' = 'admin')) %>%
mutate(
n_count = count / max(count)
) %>%
left_join(world, by = c('country' = 'admin'))
df_combined <- df_titles %>% left_join(world, by = c('country_name' = 'admin')) %>%
mutate(
n_count = count / max(count)
) %>%
left_join(world, by = c('country' = 'admin')) %>%
rename(
catalog_X = X.x,
catalog_Y = Y.x,
coo_x = X.y,
coo_y = Y.y
)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
df_combined <- df_titles %>% left_join(world, by = c('country_name' = 'admin')) %>%
mutate(
n_count = count / max(count)
) %>%
left_join(world, by = c('country' = 'admin')) %>%
rename(
catalog_X = X.x,
catalog_Y = Y.x,
coo_X = X.y,
coo_Y = Y.y
) %>%
drop_na(coo_X, coo_Y, catalog_X, catalog_Y)
titles <- read_csv('all_details_26-5.csv', guess_max = 10000)
df_titles <- titles %>%
select(clist, country) %>%
drop_na(country) %>%
separate_rows(clist, sep = ',') %>%
mutate(
country_name = str_extract(clist, '(?<=\\:").*'),
country_name = str_remove(country_name, '"'),
country = str_replace(country, 'USA', 'United States'),
country = str_replace(country, 'UK', 'United Kingdom')
) %>%
group_by(country, country_name) %>%
summarize(
count = n()
) %>%
ungroup() %>%
filter(!str_detect(country_name, '\\+'))
world <- ne_countries(scale = "medium", returnclass = "sf") %>% select(admin)
df_c <- st_centroid(world) %>% st_coordinates %>% as.data.frame()
world <- bind_cols(world, df_c) %>%
as.data.frame() %>%
select(-geometry) %>%
mutate(
admin = str_replace(admin, 'United States of America', 'United States'),
admin = str_replace(admin, 'UK', 'United Kingdom')
)
df_combined <- df_titles %>% left_join(world, by = c('country_name' = 'admin')) %>%
mutate(
n_count = count / max(count)
) %>%
left_join(world, by = c('country' = 'admin')) %>%
rename(
catalog_X = X.x,
catalog_Y = Y.x,
coo_X = X.y,
coo_Y = Y.y
) %>%
drop_na(coo_X, coo_Y, catalog_X, catalog_Y)
runApp()
